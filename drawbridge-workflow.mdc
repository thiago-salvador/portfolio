# Drawbridge Workflow for Cursor

## Context
This is a Next.js portfolio project for Thiago Salvador, styled after Jon Howell's minimalist black & white design.

## Technology Stack
- Next.js 15.3.2 with App Router
- React 18.3.1
- TypeScript 5.8.3
- Tailwind CSS 3.4.17
- Biome for formatting/linting
- shadcn/ui components

## Task Processing Instructions

When processing tasks from `moat-tasks.mdc`:

### 1. Read and Understand
- Read the complete task description
- Check the DOM selector and screenshot context
- Understand the visual change requested

### 2. Locate Files
- Most UI changes will be in `src/app/page.tsx`
- Component-specific changes may be in `src/components/`
- Data changes go in `src/data/`

### 3. Implement Changes
- Follow existing code patterns
- Use Tailwind utility classes (no custom CSS)
- Maintain responsive design (mobile-first)
- Keep the black background theme
- Use opacity for text hierarchy (opacity-60, opacity-40, etc.)

### 4. Style Guidelines
- Font sizes: Use predefined Tailwind sizes (text-sm to text-9xl)
- Spacing: Use Tailwind spacing scale (px-6, py-12, etc.)
- Colors: Stick to white text on black background
- Hover states: Use opacity-70 transitions
- Typography: Bold for headings, light/normal for body text

### 5. Testing
- Verify changes in browser at http://localhost:3001
- Test responsive breakpoints (mobile, tablet, desktop)
- Ensure no console errors
- Check that hot reload works

### 6. Update Status
- Mark task as completed in moat-tasks.mdc
- Update moat-task-detail.json with completion timestamp
- Note any issues or follow-up tasks needed

## Common Patterns

### Adding a Section
```tsx
<section className="px-6 md:px-12 py-24">
  <div className="max-w-7xl mx-auto">
    {/* Content */}
  </div>
</section>
```

### Responsive Typography
```tsx
<h1 className="text-4xl md:text-6xl lg:text-8xl font-bold">
  Title
</h1>
```

### Card with Hover Effect
```tsx
<a href="#" className="group block">
  <div className="group-hover:opacity-70 transition-opacity">
    {/* Content */}
  </div>
</a>
```

## Important Notes
- Always use "use client" directive for interactive components
- Import from @/data/* for data files
- Import from @/types/* for TypeScript interfaces
- Run `npm run lint` before marking tasks complete
- Keep changes minimal and focused on the specific task
